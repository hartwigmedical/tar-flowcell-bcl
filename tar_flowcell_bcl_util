#!/usr/bin/env bash

GSUTIL="gsutil"

create_parent_directories() {
  local file_path=$1 && shift
  [[ -n ${file_path} ]] || die "Not enough arguments to ${FUNCNAME[0]}"
  mkdir -p "${file_path%/*}" || die "Could not create parent directories for file"
}

file_exists_in_bucket() {
  local bucket_path=$1 && shift
  [[ -n ${bucket_path} ]] || die "Not enough arguments to ${FUNCNAME[0]}"
  ${GSUTIL} -q stat "${bucket_path}"
}

get_thread_count(){
  echo $(($(grep -c processor /proc/cpuinfo) * 8 / 10 ))
}

tool_exists_or_die() {
  local tool=$1 && shift
  [[ -n ${tool} ]] || die "Not enough arguments to ${FUNCNAME[0]}"
  command -v "${tool}" >/dev/null 2>&1 || die "Tool '${tool}' not found"
}

file_exists_or_die() {
  local file=$1 && shift
  [[ -n ${file} ]] || die "Not enough arguments to ${FUNCNAME[0]}"
  [[ -f "${file}" ]] || die "File '${file}' not found"
}

msg() {
  local msg_type=$1 && shift
  local msg_content=$* && shift
  echo "[${msg_type}] $(date +'%y%m%d %T') - ${msg_content}"
}

die() {
  print_error_msg "$@"
  exit 1
}

warn() {
  msg "WARN" "$@" >&2
}

info() {
  msg "INFO" "$@"
}

print_error_msg() {
  msg "ERROR" "$@" >&2
}